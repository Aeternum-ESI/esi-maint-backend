model InterventionRequest {
    id        Int                       @id @default(autoincrement())
    reportId  Int
    title     String
    deadline  String
    priority  Priority
    status    InterventionRequestStatus
    createdBy Int

    assignedTo    TechnicianAssignement[]
    Interventions Interventions[]

    report  Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
    creator User   @relation(fields: [createdBy], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
}

model TechnicianAssignement {
    id                    Int     @id @default(autoincrement())
    technicianId          Int
    interventionRequestId Int
    locationId            Int?
    completed             Boolean @default(false)

    technician          Technician          @relation(fields: [technicianId], references: [userId])
    interventionRequest InterventionRequest @relation(fields: [interventionRequestId], references: [id], onDelete: Cascade)
    location            Asset?              @relation(fields: [locationId], references: [id])

    createdAt DateTime @default(now())
}

model Interventions {
    id                    Int                 @id @default(autoincrement())
    interventionRequestId Int
    description           String
    interventionRequest   InterventionRequest @relation(fields: [interventionRequestId], references: [id], onDelete: Cascade)
    createdAt             DateTime            @default(now())
}

enum Priority {
    LOW
    MEDIUM
    HIGH
}

enum InterventionRequestStatus {
    IN_PROGRESS
    COMPLETED
}
